// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CEBodyPlanet.Migrations
{
    [DbContext(typeof(WebContext))]
    partial class WebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CEBodyPlanet.Models.Categoria", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Categoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Ciudad", b =>
                {
                    b.Property<int>("Id_Ciudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Ciudad"));

                    b.Property<int>("CodPostal")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Ciudad");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Marca", b =>
                {
                    b.Property<int>("Id_Marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Marca"));

                    b.Property<string>("NomnbreMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Marca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Persona", b =>
                {
                    b.Property<int>("Id_Persona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Persona"));

                    b.Property<string>("Apellido_Persona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CiudadId_Ciudad")
                        .HasColumnType("int");

                    b.Property<int>("DNI_Persona")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio_Persona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Ciudad")
                        .HasColumnType("int");

                    b.Property<string>("Mail_Persona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre_Persona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefono_Persona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Persona");

                    b.HasIndex("CiudadId_Ciudad");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Producto", b =>
                {
                    b.Property<int>("Id_Producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Producto"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaVto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarcaProductoId_Marca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioVta1")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PrecioVta2")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Uso")
                        .HasColumnType("int");

                    b.Property<int>("categoriaId_Categoria")
                        .HasColumnType("int");

                    b.Property<int>("proveedorId_Proveedor")
                        .HasColumnType("int");

                    b.HasKey("Id_Producto");

                    b.HasIndex("MarcaProductoId_Marca");

                    b.HasIndex("categoriaId_Categoria");

                    b.HasIndex("proveedorId_Proveedor");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Proveedor", b =>
                {
                    b.Property<int>("Id_Proveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Proveedor"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<int>("Cuit_proveedor")
                        .HasColumnType("int");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_Proveedor");

                    b.HasIndex("CiudadId");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Persona", b =>
                {
                    b.HasOne("CEBodyPlanet.Models.Ciudad", "Ciudad")
                        .WithMany("Persona")
                        .HasForeignKey("CiudadId_Ciudad");

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Producto", b =>
                {
                    b.HasOne("CEBodyPlanet.Models.Marca", "MarcaProducto")
                        .WithMany("Producto")
                        .HasForeignKey("MarcaProductoId_Marca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEBodyPlanet.Models.Categoria", "categoria")
                        .WithMany("producto")
                        .HasForeignKey("categoriaId_Categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CEBodyPlanet.Models.Proveedor", "proveedor")
                        .WithMany("producto")
                        .HasForeignKey("proveedorId_Proveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarcaProducto");

                    b.Navigation("categoria");

                    b.Navigation("proveedor");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Proveedor", b =>
                {
                    b.HasOne("CEBodyPlanet.Models.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Categoria", b =>
                {
                    b.Navigation("producto");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Ciudad", b =>
                {
                    b.Navigation("Persona");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Marca", b =>
                {
                    b.Navigation("Producto");
                });

            modelBuilder.Entity("CEBodyPlanet.Models.Proveedor", b =>
                {
                    b.Navigation("producto");
                });
#pragma warning restore 612, 618
        }
    }
}
